/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or
    ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *,
    :before,
    :after,
    ::backdrop {
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
    }
  }
}
@layer theme {
  :root,
  :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas,
      "Liberation Mono", "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-red-700: oklch(50.5% 0.213 27.518);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-green-800: oklch(44.8% 0.119 151.328);
    --color-green-900: oklch(39.3% 0.095 152.535);
    --color-green-950: oklch(26.6% 0.065 152.934);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: 1.2;
    --font-weight-normal: 400;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-2xl: 1rem;
    --default-transition-duration: 0.15s;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *,
  :after,
  :before,
  ::backdrop {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }
  html,
  :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(
      --default-font-family,
      ui-sans-serif,
      system-ui,
      sans-serif,
      "Apple Color Emoji",
      "Segoe UI Emoji",
      "Segoe UI Symbol",
      "Noto Color Emoji"
    );
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b,
  strong {
    font-weight: bolder;
  }
  code,
  kbd,
  samp,
  pre {
    font-family: var(
      --default-mono-font-family,
      ui-monospace,
      SFMono-Regular,
      Menlo,
      Monaco,
      Consolas,
      "Liberation Mono",
      "Courier New",
      monospace
    );
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(
      --default-mono-font-variation-settings,
      normal
    );
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub,
  sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol,
  ul,
  menu {
    list-style: none;
  }
  img,
  svg,
  video,
  canvas,
  audio,
  iframe,
  embed,
  object {
    vertical-align: middle;
    display: block;
  }
  img,
  video {
    max-width: 100%;
    height: auto;
  }
  button,
  input,
  select,
  optgroup,
  textarea {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not ((-webkit-appearance: -apple-pay-button))) or
    (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
    }
    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-year-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-month-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-day-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-hour-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-minute-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-second-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-millisecond-field {
    padding-block: 0;
  }
  ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button,
  input:where([type="button"], [type="reset"], [type="submit"]) {
    appearance: button;
  }
  ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button {
    height: auto;
  }
  ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
  .base {
    flex-direction: row;
    max-width: 100vw;
    max-height: 100vh;
    font-family: nunito-sans;
    display: flex;
    overflow-y: clip;
  }
  .dark-mode {
    color: #fff;
    background-color: #1e1e1e;
  }
  .body {
    min-height: 100vh;
    max-height: 100vh;
    padding: calc(var(--spacing) * 6);
    padding-top: calc(var(--spacing) * 12);
    flex: 90%;
    overflow-y: auto;
  }
  @media (min-width: 40rem) {
    .body {
      padding: calc(var(--spacing) * 8);
      padding-top: calc(var(--spacing) * 16);
      flex: 85%;
    }
  }
  @media (min-width: 48rem) {
    .body {
      padding: calc(var(--spacing) * 12);
      padding-top: calc(var(--spacing) * 20);
      flex: 75%;
    }
  }
  .inner-body {
    width: 100%;
  }
  @media (min-width: 40rem) {
    .inner-body {
      width: 95%;
    }
  }
  @media (min-width: 48rem) {
    .inner-body {
      width: 90%;
    }
  }
  @media (min-width: 64rem) {
    .inner-body {
      width: 85%;
    }
  }
  @media (min-width: 80rem) {
    .inner-body {
      width: 80%;
    }
  }
  @font-face {
    font-family: nunito-sans;
    src: url(nunito_sans-BjMAmxXG.ttf);
    font-style: normal;
  }
  @font-face {
    font-family: nunito-sans;
    src: url(nunito_sans_italic-AEHiEU5b.ttf);
    font-style: italic;
  }
}
@layer components {
  .modal {
    --tw-translate-x: -50%;
    --tw-translate-y: -50%;
    width: 70%;
    max-width: 70%;
    max-height: 60%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    border-radius: var(--radius-lg);
    transition-property: color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
      --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate,
      filter, -webkit-backdrop-filter, backdrop-filter, display, visibility,
      content-visibility, overlay, pointer-events;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    position: fixed;
    top: 45%;
    left: 50%;
    overflow-y: auto;
  }
  @media (min-width: 40rem) {
    .modal {
      width: 50%;
      max-width: 50%;
      max-height: 60%;
    }
  }
  @media (min-width: 48rem) {
    .modal {
      width: 40%;
      max-width: 40%;
      max-height: 55%;
    }
  }
  @media (min-width: 64rem) {
    .modal {
      width: 30%;
      max-width: 30%;
      max-height: 50%;
    }
  }
  .sidebar {
    border-top-right-radius: var(--radius-2xl);
    background-color: var(--color-green-900);
    max-height: 95vh;
    padding-inline: calc(var(--spacing) * 2);
    flex: 1 0 10%;
    margin-top: 5vh;
  }
  @media (min-width: 40rem) {
    .sidebar {
      padding-inline: calc(var(--spacing) * 4);
      flex: 15%;
    }
  }
  @media (min-width: 48rem) {
    .sidebar {
      border-top-right-radius: var(--radius-2xl);
      max-height: 92.5vh;
      padding-inline: calc(var(--spacing) * 6);
      flex: 25%;
      margin-top: 7.5vh;
    }
  }
  @media (min-width: 64rem) {
    .sidebar {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .quick-menu {
    right: calc(var(--spacing) * 0);
    bottom: calc(var(--spacing) * 0);
    --tw-translate-x: calc(var(--spacing) * 1.25);
    --tw-translate-y: calc(var(--spacing) * 1.25);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    border-top-left-radius: var(--radius-md);
    background-color: var(--color-green-900);
    padding: calc(var(--spacing) * 2);
    padding-bottom: calc(var(--spacing) * 1);
    position: fixed;
    scale: 80%;
  }
  @media (min-width: 40rem) {
    .quick-menu {
      --tw-translate-x: calc(var(--spacing) * 0.75);
      --tw-translate-y: calc(var(--spacing) * 0.75);
      translate: var(--tw-translate-x) var(--tw-translate-y);
      scale: 90%;
    }
  }
  @media (min-width: 48rem) {
    .quick-menu {
      --tw-translate-x: calc(var(--spacing) * 0);
      --tw-translate-y: calc(var(--spacing) * 0);
      translate: var(--tw-translate-x) var(--tw-translate-y);
      scale: 100%;
    }
  }
  .bar-item-idle {
    margin-bottom: calc(var(--spacing) * 1.5);
    border-radius: var(--radius-md);
    width: 100%;
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
    text-align: center;
    color: var(--color-white);
    transition-property: color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
      --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate,
      filter, -webkit-backdrop-filter, backdrop-filter, display, visibility,
      content-visibility, overlay, pointer-events;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    display: block;
  }
  @media (hover: hover) {
    .bar-item-idle:hover {
      background-color: var(--color-green-600);
    }
  }
  .bar-item-idle:active {
    background-color: var(--color-green-500);
  }
  @media (min-width: 40rem) {
    .bar-item-idle {
      margin-bottom: calc(var(--spacing) * 1);
      width: 100%;
      padding-inline: calc(var(--spacing) * 2);
      text-align: left;
    }
  }
  .bar-item-active {
    margin-bottom: calc(var(--spacing) * 1.5);
    border-radius: var(--radius-md);
    background-color: var(--color-green-800);
    width: 100%;
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 1);
    text-align: center;
    color: var(--color-white);
    transition-property: color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
      --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate,
      filter, -webkit-backdrop-filter, backdrop-filter, display, visibility,
      content-visibility, overlay, pointer-events;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    display: block;
  }
  @media (hover: hover) {
    .bar-item-active:hover {
      background-color: var(--color-green-600);
    }
  }
  .bar-item-active:active {
    background-color: var(--color-green-500);
  }
  @media (min-width: 40rem) {
    .bar-item-active {
      margin-bottom: calc(var(--spacing) * 1);
      width: 100%;
      padding-inline: calc(var(--spacing) * 2);
      text-align: left;
    }
  }
  .input-field {
    margin-block: calc(var(--spacing) * 1);
    border-radius: var(--radius-md);
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
    border-color: var(--color-green-500);
    background-color: var(--color-gray-300);
    padding: calc(var(--spacing) * 2);
  }
  .input-field:focus {
    border-style: var(--tw-border-style);
    --tw-outline-style: none;
    border-width: 1px;
    outline-style: none;
  }
  .btn-primary {
    border-radius: var(--radius-md);
    background-color: var(--color-green-800);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    color: var(--color-white);
    transition-property: color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
      --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate,
      filter, -webkit-backdrop-filter, backdrop-filter, display, visibility,
      content-visibility, overlay, pointer-events;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  @media (hover: hover) {
    .btn-primary:hover {
      background-color: var(--color-green-600);
    }
  }
  .btn-primary:active {
    background-color: var(--color-green-500);
  }
  .btn-primary-alert {
    border-radius: var(--radius-md);
    background-color: var(--color-red-600);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    color: var(--color-white);
    transition-property: color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
      --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate,
      filter, -webkit-backdrop-filter, backdrop-filter, display, visibility,
      content-visibility, overlay, pointer-events;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  @media (hover: hover) {
    .btn-primary-alert:hover {
      background-color: var(--color-red-700);
    }
  }
  .btn-primary-alert:active {
    background-color: var(--color-red-500);
  }
  .btn-secondary {
    border-radius: var(--radius-md);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    color: var(--color-green-600);
    transition-property: color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
      --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate,
      filter, -webkit-backdrop-filter, backdrop-filter, display, visibility,
      content-visibility, overlay, pointer-events;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    background-image: none;
  }
  @media (hover: hover) {
    .btn-secondary:hover {
      background-color: var(--color-gray-200);
    }
  }
  .btn-secondary:active {
    background-color: var(--color-gray-300);
  }
  .btn-secondary-alert {
    border-radius: var(--radius-md);
    padding-inline: calc(var(--spacing) * 4);
    padding-block: calc(var(--spacing) * 2);
    color: var(--color-red-600);
    transition-property: color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
      --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate,
      filter, -webkit-backdrop-filter, backdrop-filter, display, visibility,
      content-visibility, overlay, pointer-events;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    background-image: none;
  }
  @media (hover: hover) {
    .btn-secondary-alert:hover {
      background-color: var(--color-red-600);
      color: var(--color-white);
    }
  }
  .btn-secondary-alert:active {
    background-color: var(--color-red-500);
  }
}
@layer utilities {
  .visible {
    visibility: visible;
  }
  .static {
    position: static;
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .m-1 {
    margin: calc(var(--spacing) * 1);
  }
  .mx-1 {
    margin-inline: calc(var(--spacing) * 1);
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .my-8 {
    margin-block: calc(var(--spacing) * 8);
  }
  .my-\[17\.5pt\] {
    margin-block: 17.5pt;
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .h-\[75vh\] {
    height: 75vh;
  }
  .max-h-\[77\.5vh\] {
    max-height: 77.5vh;
  }
  .w-\[50vw\] {
    width: 50vw;
  }
  .w-full {
    width: 100%;
  }
  .in-slide-down-realfast {
    animation: 0.25s forwards in-slide-down;
  }
  .in-slide-left-fast {
    animation: 0.5s forwards in-slide-left;
  }
  .in-slide-right-slow {
    animation: 1.5s forwards in-slide-right;
  }
  .in-slide-up {
    animation: 1s forwards in-slide-up;
  }
  .in-slide-up-fast {
    animation: 0.5s forwards in-slide-up;
  }
  .in-slide-up-realfast {
    animation: 0.25s forwards in-slide-up;
  }
  .out-slide-down-realfast {
    animation: 0.25s forwards out-slide-down;
  }
  .resize {
    resize: both;
  }
  .resize-y {
    resize: vertical;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-center {
    justify-content: center;
  }
  .overflow-x-auto {
    overflow-x: auto;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .border-1 {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-green-800 {
    border-color: var(--color-green-800);
  }
  .border-green-900\/80 {
    border-color: #0d542bcc;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .border-green-900\/80 {
      border-color: color-mix(
        in oklab,
        var(--color-green-900) 80%,
        transparent
      );
    }
  }
  .\!bg-gray-600 {
    background-color: var(--color-gray-600) !important;
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }
  .pb-8 {
    padding-bottom: calc(var(--spacing) * 8);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-gray-100 {
    color: var(--color-gray-100);
  }
  .text-gray-500 {
    color: var(--color-gray-500);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .opacity-20 {
    opacity: 0.2;
  }
  .opacity-75 {
    opacity: 0.75;
  }
  .opacity-80 {
    opacity: 0.8;
  }
  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a),
      0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a),
      0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
      var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-green-950\/80 {
    --tw-shadow-color: #032e15cc;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .shadow-green-950\/80 {
      --tw-shadow-color: color-mix(
        in oklab,
        color-mix(in oklab, var(--color-green-950) 80%, transparent)
          var(--tw-shadow-alpha),
        transparent
      );
    }
  }
  .blur {
    --tw-blur: blur(8px);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast)
      var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert)
      var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }
  .transition {
    transition-property: color, background-color, border-color, outline-color,
      text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via,
      --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate,
      filter, -webkit-backdrop-filter, backdrop-filter, display, visibility,
      content-visibility, overlay, pointer-events;
    transition-timing-function: var(
      --tw-ease,
      var(--default-transition-timing-function)
    );
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  @media (hover: hover) {
    .hover\:\!bg-white\/10:hover {
      background-color: #ffffff1a !important;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:\!bg-white\/10:hover {
        background-color: color-mix(
          in oklab,
          var(--color-white) 10%,
          transparent
        ) !important;
      }
    }
    .hover\:bg-green-600\/50:hover {
      background-color: #00a54480;
    }
    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-green-600\/50:hover {
        background-color: color-mix(
          in oklab,
          var(--color-green-600) 50%,
          transparent
        );
      }
    }
  }
  .active\:bg-green-500\/50:active {
    background-color: #00c75880;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .active\:bg-green-500\/50:active {
      background-color: color-mix(
        in oklab,
        var(--color-green-500) 50%,
        transparent
      );
    }
  }
  @media (min-width: 40rem) {
    .sm\:my-6 {
      margin-block: calc(var(--spacing) * 6);
    }
    .sm\:mt-4 {
      margin-top: calc(var(--spacing) * 4);
    }
    .sm\:hidden {
      display: none;
    }
    .sm\:inline {
      display: inline;
    }
    .sm\:max-h-\[75vh\] {
      max-height: 75vh;
    }
    .sm\:w-\[42\.5vw\] {
      width: 42.5vw;
    }
    .sm\:w-auto {
      width: auto;
    }
    .sm\:pt-6 {
      padding-top: calc(var(--spacing) * 6);
    }
    .sm\:pb-4\.5 {
      padding-bottom: calc(var(--spacing) * 4.5);
    }
    .sm\:font-normal {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
  }
  @media (min-width: 48rem) {
    .md\:mt-5 {
      margin-top: calc(var(--spacing) * 5);
    }
    .md\:hidden {
      display: none;
    }
    .md\:inline {
      display: inline;
    }
    .md\:max-h-\[70vh\] {
      max-height: 70vh;
    }
    .md\:w-\[35vw\] {
      width: 35vw;
    }
    .md\:py-2 {
      padding-block: calc(var(--spacing) * 2);
    }
    .md\:pt-8 {
      padding-top: calc(var(--spacing) * 8);
    }
    .md\:pb-5 {
      padding-bottom: calc(var(--spacing) * 5);
    }
  }
  @media (min-width: 64rem) {
    .lg\:mt-6 {
      margin-top: calc(var(--spacing) * 6);
    }
    .lg\:hidden {
      display: none;
    }
    .lg\:inline {
      display: inline;
    }
    .lg\:max-h-\[67\.5vh\] {
      max-height: 67.5vh;
    }
    .lg\:pt-10 {
      padding-top: calc(var(--spacing) * 10);
    }
  }
  @media (min-width: 80rem) {
    .xl\:hidden {
      display: none;
    }
    .xl\:inline {
      display: inline;
    }
  }
  .custom-scrollbar {
    scrollbar-width: thin;
    scrollbar-color: #afafafbf transparent;
    scrollbar-arrow-color: transparent;
  }
  .no-scrollbar {
    scrollbar-width: none;
    scrollbar-color: transparent transparent;
  }
  .scroll-shadow {
    height: calc(var(--spacing) * 4);
    background-color: #0d542bcc;
    width: 77.5%;
    position: absolute;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .scroll-shadow {
      background-color: color-mix(
        in oklab,
        var(--color-green-900) 80%,
        transparent
      );
    }
  }
  @media (min-width: 40rem) {
    .scroll-shadow {
      width: 85%;
    }
  }
  @media (min-width: 48rem) {
    .scroll-shadow {
      width: 82.5%;
    }
  }
  @media (min-width: 64rem) {
    .scroll-shadow {
      width: 80%;
    }
  }
  .shadow-top {
    box-shadow: 0 -5px 8px #0d542bcc;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .shadow-top {
      box-shadow: 0 -5px 8px color-mix(in oklab, var(--color-green-900) 80%, transparent);
    }
  }
  .shadow-bottom {
    box-shadow: 0 5px 8px #0d542bcc;
  }
  @supports (color: color-mix(in lab, red, red)) {
    .shadow-bottom {
      box-shadow: 0 5px 8px
        color-mix(in oklab, var(--color-green-900) 80%, transparent);
    }
  }
}
@keyframes in-slide-up {
  0% {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes in-slide-down {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}
@keyframes out-slide-down {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0;
    transform: translateY(20px);
  }
}
@keyframes in-slide-right {
  0% {
    opacity: 0;
    transform: translate(-20px);
  }
  to {
    opacity: 1;
    transform: translate(0);
  }
}
@keyframes in-slide-left {
  0% {
    opacity: 0;
    transform: translate(20px);
  }
  to {
    opacity: 1;
    transform: translate(0);
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
